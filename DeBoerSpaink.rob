NAME XBOT9001

Bank StartPlus
  SET #Active, 999

  SET #2, 0
  @Loop1
  ADD #2, 1

  ; Maak en activeer nieuwe robot
  CREATE 2, 7, 0
  TRANS 2, 1
  TRANS 3, 2
  TRANS 4, 3
  TRANS 5, 4
  TRANS 6, 5
  TRANS 7, 6
  TRANS 8, 7
  SET %Active, 1

  ; Draai en herhaal
  TURN 0
  COMP #2, 4
    JUMP @Loop1

  ; Wacht op verwijderen
  @DeathLoop
  COMP #Active, 999
    JUMP @DeathLoopDone
  JUMP @DeathLoop

  ; Verwijder armen
  @DeathLoopDone

  SET #2, 0
  @Loop2
  ADD #2, 1

  SCAN #1
  COMP #1, 2
    JUMP @SkipLoop2
  COMP %Active, 42
    JUMP @DontSkipLoop21
  JUMP @SkipLoop2
  @DontSkipLoop21
  COMP %Active, 3
    JUMP @DontSkipLoop22
  JUMP @SkipLoop2
  @DontSkipLoop22

  SET %Active, 0
  TRANS 8, 1
  TRANS 6, 2
  SET %Active, 1

  @SkipLoop2
  TURN 0

  COMP #2, 4
    JUMP @Loop2

  ; Sterf
  DIE

Bank Search
  ; Scan vakje
  SCAN #1

  ; Als niet leeg
  COMP #1, 0
    JUMP @NotEmpty

  ; Maak en activeer nieuwe robot
  SET #2, 0
  @Loop6
  ADD #2, 1
  COMP #2, 100
    JUMP @Loop6
  CREATE 2, 7, 0
  TRANS 1, 1
  TRANS 2, 2
  TRANS 3, 3
  TRANS 4, 4
  TRANS 5, 5
  TRANS 6, 6
  TRANS 7, 7
  SET %Active, 1

  ; Stop
  JUMP @End1

  @NotEmpty

  ; Als zelfde bot
  COMP #1, 1
    JUMP @End1

  SET #Active, 4

  ; Injecteer ander
  SET %Active, 0
  TRANS 7, 1
  TRANS 3, 2
  SET %Active, 3

  ; Infecteer zichzelf
  TURN 0
  TURN 0

  COMP %Active, 999
    JUMP @NotCore

  SET %Active, 200
  JUMP @CoreDone

  @NotCore
  SET %Active, 0
  TRANS 7, 1
  TRANS 4, 2
  SET %Active, 2

  @CoreDone

  TURN 0
  TURN 0

  ; Wacht tot vakje klaar is
  SET #2, 0
  @Loop7
  ADD #2, 1
  COMP #2, 100
    JUMP @Loop7
  SET #Active, 42
  BJUMP 2, 1

  ; Stop deze robot
  @End1
  SET #Active, 0

BANK Locate
  ; Ga naar de overkant
  @GoToCoreLoop
  SCAN #1

  COMP #1, 2
    JUMP @NotSelf
  DIE
  @NotSelf

  COMP #1, 1
    MOVE
  COMP #1, 1
    JUMP @GoToCoreLoop

  ; En draai weer om
  TURN 0
  TURN 0

  ; Maak 2e locate
  COMP #Active, 42
    JUMP @SkipNewLocate

  SET #2, 0
  @Loop3
  ADD #2, 1
  COMP #2, 300
    JUMP @Loop3

  CREATE 2, 6, 1
  TRANS 2, 1
  TRANS 6, 6
  SET %Active, 1
  @SkipNewLocate

  ; Maak kruis dingen
  TURN 0
  CREATE 2, 1, 1
  TRANS 6, 1
  SET %Active, 1

  TURN 1
  CREATE 0, 1, 0
  TRANS 1, 1

  ; Stop
  SET #Active, 0

BANK StartDestroyOther
  ; Verwijder naar voren bij de eerste
  COMP #Active, 3
    JUMP @NotFirst

  SCAN #1
  COMP #1, 2
    JUMP @NotFirst

  SET %Active, 0
  TRANS 7, 1
  TRANS 5, 2
  SET %Active, 2

  @NotFirst

  ; Draai om
  TURN 0
  TURN 0

  ; Stop als core
  COMP %Active, 999
    JUMP @CompareAgain1
  JUMP @DontCompareAgain1

  @CompareAgain1
  COMP %Active, 200
    JUMP @NotCore1

  @DontCompareAgain1
  SET %Active, 200
  JUMP @End2
  @NotCore1

  ; Injecteer sterf virus
  SET %Active, 0
  TRANS 1, 1
  TRANS 2, 2
  SET %Active, 2

  ; Sterf
  @End2
  COMP #Active, 3
    DIE
  JUMP 0

BANK StartDestroySelf
  ; Draai om
  TURN 0
  TURN 0

  ; Stop als core
  COMP %Active, 999
    JUMP @CompareAgain2
  JUMP @DontCompareAgain2

  @CompareAgain2
  COMP %Active, 200
    JUMP @NotCore2

  @DontCompareAgain2
  SET %Active, 200
  JUMP @End3
  @NotCore2

  ; Injecteer sterf virus
  SET %Active, 0
  TRANS 1, 1
  TRANS 2, 2
  SET %Active, 2

  ; Sterf
  @End3
  DIE

BANK DestroyForward
  ; Kijk of goede
  SCAN #1
  COMP #1, 2
    JUMP @End4
  COMP %Active, 3
    JUMP @Cont4
  JUMP @End4
  @Cont4
  COMP %Active, 4
    JUMP @Cont4MaarNuEcht
  JUMP @End4
  @Cont4MaarNuEcht

  ; Injecteer sterf virus
  SET %Active, 0
  TRANS 1, 1
  TRANS 2, 2
  SET %Active, 2

  ; Sterf
  @End4
  DIE

BANK MakeCross
; Wordt gebruikt om de 2 zij armen van het uiteindelijke kruis te maken
BANK MakeCrossArm
  TURN 0
  MOVE
  TURN 1
  CREATE 0, 1, 0
  SET #Active, 0
BANK SuperBank
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
  BJUMP 2, 1
